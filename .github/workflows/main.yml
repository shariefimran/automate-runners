name: Distributed Load Test

on:
  push:
    branches:
      - main

jobs:
  start_slave:
    runs-on: ubuntu-latest
    steps:
    - name: Start JMeter Slave
      run: |
        docker run --name jmeter-slave -d --entrypoint "jmeter-server" justb4/jmeter:latest
    - name: Get Slave IP
      id: get_ip
      run: echo "::set-output name=IP::$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' jmeter-slave)"

  start_master:
    runs-on: ubuntu-latest
    needs: start_slave
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '11'
      
    - name: Run JMeter Test (No Results Storage)
      run: |
        docker run --name jmeter-master -v $(pwd):/tests -w /tests justb4/jmeter:latest \
          -n -t /tests/Demo.jmx ${{ needs.start_slave.outputs.get_ip.IP }}

    - name: Check if JMeter Test Completed
      run: docker logs jmeter-master

  analyze_results:
    runs-on: ubuntu-latest
    needs: start_master
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '11'
      
    - name: Download JMeter results (Skip for Now)
      run: echo "Skipping results download for now."
        
    - name: Upload JMeter report as artifact (Skip for Now)
      run: echo "Skipping report upload for now."
        
    - name: View JMeter report (Skip for Now)
      run: echo "Skipping report view for now."
