name: Distributed Load Test

on:
  push:
    branches:
      - main

jobs:
  start_slave:
    runs-on: ubuntu-latest
    container:
      image: justb4/jmeter:latest
      options: --entrypoint "jmeter-server"
    steps:
    - name: Get Slave IP
      id: get_ip
      run: echo "::set-output name=IP::$(hostname -I | awk '{print $1}')"

  start_master:
    runs-on: ubuntu-latest
    needs: start_slave
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
      
    - name: Prepare Results Directory
      run: mkdir -p results

    - name: Start JMeter Master
      run: |
        docker run --name jmeter-master -v $(pwd):/tests -w /tests justb4/jmeter:latest \
          -n -t /tests/Demo.jmx -R${{ needs.start_slave.outputs.get_ip.IP }} \
          -l /tests/results/results.jtl -e -o /tests/results/report

    - name: Upload JMeter results as artifact
      uses: actions/upload-artifact@v3
      with:
        name: jmeter-results
        path:./results

  analyze_results:
    runs-on: ubuntu-latest
    needs: start_master
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
      
    - name: Download JMeter results
      uses: actions/download-artifact@v3
      with:
        name: jmeter-results
        path:./results
        
    - name: Create new branch for results
      run: git checkout -b load-test-results-${GITHUB_RUN_ID}
      
    - name: Commit and push results
      run: |
        git add.
        git commit -m "Load test results for ${GITHUB_RUN_ID}"
        git push origin load-test-results-${GITHUB_RUN_ID}
